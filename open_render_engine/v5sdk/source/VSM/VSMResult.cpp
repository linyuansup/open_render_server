#include "VSMResult.h"

#include <map>

std::string vocaloid::vsm::enumToString(VSMResult result)
{
    static std::map<VSMResult, std::string> map = {
        {VSMResult::NoError, "NoError"},
        {VSMResult::OutOfMemory, "OutOfMemory"},
        {VSMResult::InvalidArgument, "InvalidArgument"},
        {VSMResult::FailedToCreateEditCommand, "FailedToCreateEditCommand"},
        {VSMResult::ObjectNotFound, "ObjectNotFound"},
        {VSMResult::ParentNotFound, "ParentNotFound"},
        {VSMResult::InvalidPath, "InvalidPath"},
        {VSMResult::FailedToCopyFile, "FailedToCopyFile"},
        {VSMResult::FileAlreadyExists, "FileAlreadyExists"},
        {VSMResult::ObjectIsProtected, "ObjectIsProtected"},
        {VSMResult::FailedToLoadVSM, "FailedToLoadVSM"},
        {VSMResult::CannotFindUid, "CannotFindUid"},
        {VSMResult::FailedToGetHomeDir, "FailedToGetHomeDir"},
        {VSMResult::FailedToCreateTempDir, "FailedToCreateTempDir"},
        {VSMResult::FailedToCreateTempProject, "FailedToCreateTempProject"},
        {VSMResult::FailedToMoveTempProject, "FailedToMoveTempProject"},
        {VSMResult::FailedToCreateOutputDir, "FailedToCreateOutputDir"},
        {VSMResult::FailedToCreateSequenceUUID, "FailedToCreateSequenceUUID"},
        {VSMResult::FailedToCreateSequenceTempDir, "FailedToCreateSequenceTempDir"},
        {VSMResult::InvalidSamplingRate, "InvalidSamplingRate"},
        {VSMResult::FailedToRemoveSameTimeEvent, "FailedToRemoveSameTimeEvent"},
        {VSMResult::MaxNumTrack, "MaxNumTrack"},
        {VSMResult::InvalidTrackType, "InvalidTrackType"},
        {VSMResult::MidiPartStartAbsolutePosTooSmall, "MidiPartStartAbsolutePosTooSmall"},
        {VSMResult::MidiPartStartAbsolutePosTooLarge, "MidiPartStartAbsolutePosTooLarge"},
        {VSMResult::MidiPartEndAbsolutePosTooLarge, "MidiPartEndAbsolutePosTooLarge"},
        {VSMResult::MidiPartDurationTooShort, "MidiPartDurationTooShort"},
        {VSMResult::MidiPartDurationTooLong, "MidiPartDurationTooLong"},
        {VSMResult::InvalidDivideMidiPartPos, "InvalidDivideMidiPartPos"},
        {VSMResult::JoinMidiPartOfDifferentParent, "JoinMidiPartOfDifferentParent"},
        {VSMResult::EditCommandsStaging, "EditCommandsStaging"},
        {VSMResult::ControllerRelativePosTooSmall, "ControllerRelativePosTooSmall"},
        {VSMResult::ControllerRelativePosTooLarge, "ControllerRelativePosTooLarge"},
        {VSMResult::ControllerAbsolutePosTooSmall, "ControllerAbsolutePosTooSmall"},
        {VSMResult::ControllerAbsolutePosTooLarge, "ControllerAbsolutePosTooLarge"},
        {VSMResult::CannotFindTargetTrack, "CannotFindTargetTrack"},
        {VSMResult::CannotFindTopController, "CannotFindTopController"},
        {VSMResult::InvalidControllerType, "InvalidControllerType"},
        {VSMResult::NoteStartRelativePosTooSmall, "NoteStartRelativePosTooSmall"},
        {VSMResult::NoteStartRelativePosTooLarge, "NoteStartRelativePosTooLarge"},
        {VSMResult::NoteStartAbsolutePosTooSmall, "NoteStartAbsolutePosTooSmall"},
        {VSMResult::NoteStartAbsolutePosTooLarge, "NoteStartAbsolutePosTooLarge"},
        {VSMResult::NoteEndRelativePosTooLarge, "NoteEndRelativePosTooLarge"},
        {VSMResult::NoteEndAbsolutePosTooLarge, "NoteEndAbsolutePosTooLarge"},
        {VSMResult::NoteDurationTooShort, "NoteDurationTooShort"},
        {VSMResult::NoteDurationTooLong, "NoteDurationTooLong"},
        {VSMResult::InvalidNoteNumber, "InvalidNoteNumber"},
        {VSMResult::InvalidNoteVelocity, "InvalidNoteVelocity"},
        {VSMResult::InvalidLyric, "InvalidLyric"},
        {VSMResult::InvalidPhoneme, "InvalidPhoneme"},
        {VSMResult::VibratoDurationTooShort, "VibratoDurationTooShort"},
        {VSMResult::VibratoDurationTooLong, "VibratoDurationTooLong"},
        {VSMResult::VibratoEventRelativePosTooSmall, "VibratoEventRelativePosTooSmall"},
        {VSMResult::VibratoEventRelativePosTooLarge, "VibratoEventRelativePosTooLarge"},
        {VSMResult::InvalidVibratoEventType, "InvalidVibratoEventType"},
        {VSMResult::NoteEventsNotFound, "NoteEventsNotFound"},
        {VSMResult::MidiPartIsDisable, "MidiPartIsDisable"},
        {VSMResult::SequenceNotFound, "SequenceNotFound"},
        {VSMResult::SequenceTempDirPathNotFound, "SequenceTempDirPathNotFound"},
        {VSMResult::DatabaseManagerNotFound, "DatabaseManagerNotFound"},
        {VSMResult::VoiceBankNotFound, "VoiceBankNotFound"},
        {VSMResult::FailedToCreateVVoiceTable, "FailedToCreateVVoiceTable"},
        {VSMResult::FailedToGetDseModule, "FailedToGetDseModule"},
        {VSMResult::FailedToCreateDSE, "FailedToCreateDSE"},
        {VSMResult::FailedToStartDSE, "FailedToStartDSE"},
        {VSMResult::FailedToOpenRenderedFile, "FailedToOpenRenderedFile"},
        {VSMResult::FailedToCreateDseMidiEventsBuffer, "FailedToCreateDseMidiEventsBuffer"},
        {VSMResult::FailedToCreateDseWaveBuffer, "FailedToCreateDseWaveBuffer"},
        {VSMResult::FailedToDseDoStepSynthesis, "FailedToDseDoStepSynthesis"},
        {VSMResult::FailedToDseDoExportScore, "FailedToDseDoExportScore"},
        {VSMResult::FailedToCreateNRPN_Singer, "FailedToCreateNRPN_Singer"},
        {VSMResult::PartialRendererNotCreated, "PartialRendererNotCreated"},
        {VSMResult::DsePartialSynthNotStarted, "DsePartialSynthNotStarted"},
        {VSMResult::FailedToResetDsePartialSynth, "FailedToResetDsePartialSynth"},
        {VSMResult::DuplicatedEffectID, "DuplicatedEffectID"},
        {VSMResult::DuplicatedEffectValueName, "DuplicatedEffectValueName"},
        {VSMResult::MidiEffectIsDisabled, "MidiEffectIsDisabled"},
        {VSMResult::FailedToInitVsqParserModule, "FailedToInitVsqParserModule"},
        {VSMResult::FailedToCreateVsqParser, "FailedToCreateVsqParser"},
        {VSMResult::InvalidVsqxSchemaDirPath, "InvalidVsqxSchemaDirPath"},
        {VSMResult::FailedToParseVsqx, "FailedToParseVsqx"},
        {VSMResult::VsqObjTreeNotFound, "VsqObjTreeNotFound"},
        {VSMResult::InvalidVsqFormat, "InvalidVsqFormat"},
        {VSMResult::VsqRootNodeNotFound, "VsqRootNodeNotFound"},
        {VSMResult::VsqSequenceNotFound, "VsqSequenceNotFound"},
        {VSMResult::VsqMasterTrackNotFound, "VsqMasterTrackNotFound"},
        {VSMResult::VsqTempoNotFound, "VsqTempoNotFound"},
        {VSMResult::VsqTimeSigNotFound, "VsqTimeSigNotFound"},
        {VSMResult::VsqMixerNotFound, "VsqMixerNotFound"},
        {VSMResult::FailedToCreateJsonDoc, "FailedToCreateJsonDoc"},
        {VSMResult::FailedToOpenJsonFile, "FailedToOpenJsonFile"},
        {VSMResult::FailedToParseJson, "FailedToParseJson"},
        {VSMResult::InvalidJsonDocRootType, "InvalidJsonDocRootType"}};

    auto it = map.find(result);
    if (it != map.end())
        return it->second;

    return "Unknown";
}
